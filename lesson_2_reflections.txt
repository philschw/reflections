What happens when you initialize a repository? Why do you need to do it?

Initializing a repository tells git that we want to create a repository in a certain place and tells git to track
those files


How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area helps to break commits down into smaller parts. Without the staging area the only way to do a commit
would be by commiting all at once


How can you use the staging area to make sure you have one commit per logical change?

Since only files added to the staging area are being commited, there can't be any "accidental" commits
It is used to seperate the files to be commited from all the other files that have changed too.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When trying out new things they would be helpful. If later on you have developed your main branch
you could easily find your experimental branch again and also merge those changes into the main branch


How do the diagrams help you visualize the branch structure?

It helps understanding if any of your checkouts might not be reachable and how branches relate to each other


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

It merges differences that have been made to both branches together and moves the master to the new
tip. The representation is done the way it is because the new master is parent of both former branches


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Automatic merging saves a ton of work and makes it much more usable but it's not always well suited
for complicated problems, this is where manual merges are really helpful.